import re
import textwrap
from logging import getLogger

from fastapi.routing import APIRoute

logger = getLogger(__name__)


def generate_unique_id(route: APIRoute) -> str:
    # Currently, these operation IDs are generated by FastAPI from summary values,
    # quite often have duplicate words and are pretty long in general.
    # Because our customers will have to deal with these names,
    # we need to generate better names automatically.
    http_verb = next(iter(route.methods)).lower()
    path = re.sub("/", "_", route.path.removeprefix("/v1/"))
    path = re.sub("{.*?}", "id", path)
    return f"{http_verb}_{path}".strip("_")


class StrThatYouCantConcatenate(str):
    """FastAPI tries to add "Body_" at the beginning of model names
    but we do not want that so we use this little hack
    """

    def __radd__(self, __other: object):
        return str(self)


def get_schema_duplication_error_message(schema_name_and_modules: dict[str, list[str]]) -> str:
    error_message = " ".join(
        [
            f"{schema_name} in the following modules: {modules!s}; "
            for schema_name, modules in schema_name_and_modules.items()
        ],
    )

    return textwrap.dedent(
        f"""
        The server cannot start because there are duplicate schema names:
        {error_message}
        Please remove or rename the duplicate schema(s) to ensure unique schema names across all modules.

        To fix this error, you can:
        - Rename duplicate schemas to ensure that each schema has a unique name across all modules.
        - Remove duplicate schemas if they are not required for your application or can be replaced
        by other existing schemas.
        """,
    ).strip()
